// @generated by hand until Diesel CLI is available
// Adjust column SQL types to match your actual DB schema.

diesel::table! {
    orders (order_id) {
        order_id -> Text,
        executed_qty -> BigInt,
        market -> Nullable<Text>,
        price -> Nullable<Text>,
        quantity -> Nullable<Text>,
        // Consider mapping to a custom SQL type if you keep an enum in Rust
        side -> Nullable<Text>,
    }
}

diesel::table! {
    trades (id) {
        id -> Text,
        is_buyer_marker -> Bool,
        price -> BigInt,
        quantity -> BigInt,
        quote_quantity -> Text,
        market -> Text,
    }
}

diesel::allow_tables_to_appear_in_same_query!(
    orders,
    trades,
);

